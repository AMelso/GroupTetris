{"version":3,"sources":["firebase.js","components/tetris/tetrisDemo/files/gameHelpers.js","components/tetris/tetrisDemo/styles/StyledTetris.js","components/tetris/tetrisDemo/files/tetrominos.js","components/tetris/tetrisDemo/hooks/useStage.js","components/tetris/tetrisDemo/styles/StyledStage.js","components/tetris/tetrisDemo/styles/StyledCell.js","components/tetris/tetrisDemo/Cell.js","components/tetris/tetrisDemo/Stage.js","components/tetris/tetrisDemo/styles/StyledDisplay.js","components/tetris/tetrisDemo/Display.js","components/tetris/tetrisDemo/ai.js","components/tetris/tetrisDemo/Tetris.js","components/tetris/tetrisDemo/hooks/usePlayer.js","components/tetris/tetrisDemo/hooks/useGameStatus.js","components/tetris/tetrisDemo/hooks/useInterval.js","components/Pages/Home.js","components/Pages/UpgradeFiles/UpgradesFirebase.js","img/crystal_ball.jpeg","components/Pages/UpgradeFiles/LookAhead.js","img/timeDilation.jpeg","components/Pages/UpgradeFiles/DropSpeed.js","components/Pages/Upgrade.js","img/M118.jpeg","components/authentication/SignUp.js","components/authentication/Login.js","components/navbar/authNavBar.js","components/navbar/unAuthNavBar.js","components/navbar/Navbar.js","components/Pages/SidebarNav.js","components/tetris/files/fireBaseIntegration.js","components/Pages/Profile.js","components/Pages/ChangePassword.js","components/Pages/GameScore/HighestScore.js","components/Pages/GameScore/TotalScore.js","components/Pages/GameScore/MyScore.js","components/Pages/GameScore/GetFirebaseScores.js","components/Pages/LeaderBoard.js","components/tetris/files/gameHelpers.js","components/tetris/styles/StyledTetris.js","components/tetris/img/bg.png","components/tetris/files/tetrominos.js","components/tetris/styles/StyledLookahead.js","components/tetris/hooks/usePlayer.js","components/tetris/hooks/useStage.js","components/tetris/styles/StyledStage.js","components/tetris/styles/StyledCell.js","components/tetris/Cell.js","components/tetris/Stage.js","components/tetris/styles/StyledDisplay.js","components/tetris/Display.js","components/tetris/styles/StyledStartButton.js","components/tetris/StartButton.js","components/tetris/Lookahead.js","components/tetris/Tetris.js","components/tetris/hooks/useGameStatus.js","components/tetris/hooks/useInterval.js","components/Pages/Forum.js","components/Pages/AddForum.js","components/Pages/EditForum.js","App.js","index.js"],"names":["AuthContext","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createContext","AuthContextProvider","props","useState","user","setUser","error","setError","useEffect","unsubscribe","onAuthStateChanged","getAuth","Provider","value","useAuthState","auth","useContext","isAuthenticated","createStage","Array","from","fill","checkCollision","player","stage","moveX","x","moveY","y","tetromino","length","pos","StyledTetrisWrapper","styled","div","StyledTetris","TETROMINOS","0","shape","color","I","J","L","O","S","T","Z","randomTetromino","tetrominos","randTetromino","Math","floor","random","useStage","resetPlayer","setStage","rowsCleared","setRowsCleared","updateStage","prevStage","newStage","map","row","cell","forEach","collided","reduce","ack","findIndex","prev","unshift","push","sweepRows","StyledStage","height","width","StyledCell","type","Cell","React","memo","Stage","StyledDisplay","gameOver","Display","text","AI","lodash","cloneDeep","stageCopy","rotate","matrix","dir","rotatedTetro","_","index","col","reverse","updatePlayerPos","playerCopy","holes","arenaCopy","count","i","aggregateHeight","work","current","sum","bump","abs","completedLines","full","finalS","posX","finalR","r","rc","offset","m","lines","score","simulate","TetrisDemo","dropTime","setDropTime","setGameOver","setPlayer","useCallback","STAGE_WIDTH","clonedPlayer","JSON","parse","stringify","usePlayer","playerRotate","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","movePlayer","autoPlay","a","move","blank","callback","delay","savedCallback","useRef","id","setInterval","clearInterval","useInterval","role","tabIndex","Home","displayName","db","getFirestore","userUID","uid","GetPoints","docRef","doc","getDoc","docSnap","points","parseInt","data","GetUpgrades","upgradesRef","collection","q","query","getDocs","querySnapshot","upgrades","upgradeName","SaveUpgrade","cost","setDoc","SpendPoints","pointsRef","updateDoc","increment","LookAheadCard","lookAheadLevel","pointsToSpend","short","upgradeButton","className","Button","as","labelPosition","Label","basic","pointing","icon","onClick","updateLevelState","Icon","name","Card","Image","src","crystalBall","alt","Content","Header","Meta","Description","extra","DropSpeedCard","dropSpeedLevel","timeDilation","UpgradeCards","setlookAheadLevel","setdropSpeedLevel","setdemolitionChargeLevel","setPointsToSpend","upgradeLevels","isNaN","upgradeLevelsImport","userAvailablePoints","availablePoints","card","UserPointsBar","Grid","columns","Column","email","Divider","section","Container","SignUp","handleSubmit","e","preventDefault","target","elements","display","password","password2","createUserWithEmailAndPassword","newUser","console","log","updateProfile","history","alert","Form","onSubmit","Field","placeholder","Login","signInWithEmailAndPassword","message","AuthNavBar","Menu","Item","NavLink","exact","to","position","signOut","UnAuthNavBar","Navbar","SidebarNav","location","useLocation","pathname","userName","UpdatePoints","updateRef","UpdateLeaderBoards","total","timestamp","serverTimestamp","highscore","exists","addDoc","ProfilePage","defaultError","fnError","lnError","emailError","defaultFormData","fName","lName","formData","setFormData","updateEmail","onChange","ChangePassword","errorPass","errorcPass","cpassword","updatePassword","HighestScore","gameScoreList","TotalScore","MyScore","GetTotalScores","totalRef","orderBy","limit","results","GetHighestScores","highestRef","GetMyScores","myScoresRef","LeaderBoard","highestScoreList","setHighestScoreList","myScoreList","setMyScoreList","totalScoreList","setTotalScoreList","activeStep","setStep","TotalScores","HighestScores","MyScores","RetrieveScores","href","StyledLookahead","StyledStartButton","button","StartButton","Lookahead","Tetris","varDropSpeed","setVarDropSpeed","totalPoints","setTotalPoints","look","setLook","final","setFinal","setCount","ref","queue","randLetter","substring","updateString","nextTetromino","oldPoints","setOldPoints","retrievePoints","drop","keyCode","lookConst","upgradeHolder","lookAhead","dropSpeed","retrieveUpgrades","onKeyDown","onKeyUp","style","fontFamily","fontSize","Forum","useHistory","handleClick","handleDelete","align","AddForum","title","description","EditForum","AuthenticatedRoute","C","component","render","routeProps","UnauthenticatedRoute","redirect","App","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a8399179.chunk.js","sourcesContent":["import { getAuth, onAuthStateChanged } from '@firebase/auth'\nimport { initializeApp } from 'firebase/app'\nimport { useState, useEffect, useContext, createContext } from 'react'\n\nexport const firebaseApp = initializeApp({\n  apiKey: \"AIzaSyAdM8XsvIUKvVyhu6KpXqVEr_FPuS-iWng\",\n  authDomain: \"tetris-lite.firebaseapp.com\",\n  projectId: \"tetris-lite\",\n  storageBucket: \"tetris-lite.appspot.com\",\n  messagingSenderId: \"419803347309\",\n  appId: \"1:419803347309:web:f64debc7483edc4cf70264\",\n  measurementId: \"G-83ETDWSEH1\"\n})\n\nexport const AuthContext = createContext() // Creates context (global state)\n\nexport const AuthContextProvider = props => {\n  const [user, setUser] = useState() // Stores user information\n  const [error, setError] = useState() // Stores error related to user\n\n  useEffect(() => { // Runs on app mount\n    // onAuthStateChanged == Event listener, only needs to be called once and then updates in real time.\n    const unsubscribe = onAuthStateChanged(getAuth(), setUser, setError) // Not sure, I believe this updates setUser and setError with auth information based on onAuthStateChanged\n    return () => unsubscribe() // What is running unsubscribe as a function doing here?\n    // Suspect that unsubscribe refreshes auth state based on what is happening in the browser\n  }, [])\n  return <AuthContext.Provider value={{ user, error }} {...props} /> // Provides user and error state to all child components\n}\n\nexport const useAuthState = () => {\n  const auth = useContext(AuthContext)\n  return { ...auth, isAuthenticated: auth.user != null }\n  // useAuthState.isAuthenticated == user state exists or doesn't exist (boolean value) from AuthContextProvider\n}\n","export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\n\nexport const createStage = () => \n  Array.from(Array(STAGE_HEIGHT), () => \n    new Array(STAGE_WIDTH).fill([0, 'clear'])\n  )\n  // TODO: comment out - tutorial at 18m\n\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\n  for (let y = 0; y < player.tetromino.length; y += 1) {\n    for (let x = 0; x < player.tetromino[y].length; x += 1) {\n      // 1: Check that we're on an actual Tetromino cell\n      if (player.tetromino[y][x] !== 0) {\n        if (\n          // 2: Check that our move is inside the game areas height (y)\n          // We shouldn't go through the bottom of the play area\n          !stage[y + player.pos.y + moveY] || \n          // 3: Check that our move is inside the game areas width (x)\n          !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n          // 4: Check that the cell we're moving to isn't set to clear\n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !== 'clear'\n        ) {\n          return true\n        }\n      }\n    }\n  }\n}","import styled from 'styled-components'\n\n// import bgImage from '../img/bg.png'\n\n// May need to adjust height here to work well with nav bar\nexport const StyledTetrisWrapper = styled.div`\n  width: 100vw;\n  height: 77vh;\n  background-size: cover;\n  overflow: hidden;\n`\n\nexport const StyledTetris = styled.div`\n  display: flex;\n  align-items: flex-start;\n  padding: 40px;\n  margin: 0 0;\n  max-width: 900px;\n\n  aside {\n    width: 100%;\n    max-width: 200px;\n    display: block;\n    padding: 0 20px;\n  }\n`","export const TETROMINOS = {\n  0: { shape: [[0]], color: '255, 255, 255' },\n  I: {\n    shape:  [\n              [0, 'I', 0, 0],\n              [0, 'I', 0, 0],\n              [0, 'I', 0, 0],\n              [0, 'I', 0, 0],\n            ],\n    color: '80, 227, 230',\n  },\n  J: {\n    shape:  [\n              [0, 'J', 0],\n              [0, 'J', 0],\n              ['J', 'J', 0],\n            ],\n    color: '36, 95, 223',\n  },\n  L: {\n    shape:  [\n              [0, 'L', 0],\n              [0, 'L', 0],\n              [0, 'L', 'L'],\n            ],\n    color: '223, 173, 36',\n  },\n  O: {\n    shape:  [\n              ['O', 'O'],\n              ['O', 'O'],\n            ],\n    color: '223, 217, 36',\n  },\n  S: {\n    shape:  [\n              [0, 'S', 'S'],\n              ['S', 'S', 0],\n              [0, 0, 0],\n            ],\n    color: '48, 211, 56',\n  },\n  T: {\n    shape:  [\n              [0, 0, 0],\n              ['T', 'T', 'T'],\n              [0, 'T', 0],\n            ],\n    color: '132, 61, 198',\n  },\n  Z: {\n    shape:  [\n              ['Z', 'Z', 0],\n              [0, 'Z', 'Z'],\n              [0, 0, 0],\n            ],\n    color: '227, 78, 78',\n  },\n}\n\n// Here we can modify what pieces are available/get thrown out onto the stage\nexport const randomTetromino = () => {\n  const tetrominos = 'IJLOSTZ'\n  const randTetromino = \n    tetrominos[Math.floor(Math.random() * tetrominos.length)]\n  return TETROMINOS[randTetromino]\n}","import { useState, useEffect } from 'react'\nimport { createStage } from '../files/gameHelpers'\n\nexport const useStage = (player, resetPlayer) => {\n  const [ stage, setStage ] = useState(createStage())\n  const [ rowsCleared, setRowsCleared ] = useState(0)\n\n  useEffect(() => {\n    setRowsCleared(0)\n\n    const sweepRows = newStage => \n      newStage.reduce((ack, row) => {\n        if (row.findIndex(cell => cell[0] === 0) === -1) {\n          setRowsCleared(prev => prev + 1)\n          ack.unshift(new Array(newStage[0].length).fill([0, 'clear']))\n          return ack\n        }\n        ack.push(row)\n        return ack\n      }, [])\n\n    const updateStage = prevStage => {\n      // First flush the stage\n      // Take the previous stage and map through each row\n      const newStage = prevStage.map(row => \n        // Take the row and map through every cell\n        row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell)), // For every cell check if it is clear or filled, in which case write the new stage's cell in that row as clear or filled\n      )\n\n      // Then draw the tetromino\n      // For each row\n      player.tetromino.forEach((row, y) => {\n        // For each cell\n        row.forEach((value, x) => {\n          // If the value of that cell is not 0\n          if (value !== 0) {\n            // Update the position of that cell on the next stage\n            newStage[y + player.pos.y][x + player.pos.x] = [ // newStage at position x by y =\n              value, // value of the tetromino\n              `${player.collided ? 'merged' : 'clear'}`, // if it is cleared or merged\n            ]\n          }\n        })\n      })\n      // Then check if we collided\n      if (player.collided) {\n        resetPlayer()\n        return sweepRows(newStage)\n      }\n      return newStage\n    }\n\n    setStage(prev => updateStage(prev))\n  }, [player, resetPlayer])\n\n  return [stage, setStage, rowsCleared]\n}","import styled from 'styled-components'\n\nexport const StyledStage = styled.div`\n  display: grid;\n  grid-template-rows: repeat(\n    ${props => props.height},\n    calc(20vw / ${props => props.width})\n  );\n  grid-template-columns: repeat(${props => props.width}, 1fr);\n  grid-gap: 1px;\n  border: 2px solid #ddd;\n  width: 100%;\n  max-width: 25vw;\n  background: #f2f2f2;\n`","import styled from 'styled-components'\n\nexport const StyledCell = styled.div`\n  width: auto;\n  background: rgba(${props => props.color}, 0.8);\n  border: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\n  border-bottom-color: rgba(${props => props.color}, 0.1);\n  border-right-color: rgba(${props => props.color}, 1);\n  border-top-color: rgba(${props => props.color}, 1);\n  border-left-color: rgba(${props => props.color}, 0.3);\n`","import React from 'react'\nimport { StyledCell } from './styles/StyledCell'\nimport { TETROMINOS } from './files/tetrominos'\n\nconst Cell = ({ type }) => (\n  <StyledCell type={type} color={TETROMINOS[type].color} />\n)\n\nexport default React.memo(Cell)","import React from 'react'\nimport { StyledStage } from './styles/StyledStage'\n\nimport Cell from './Cell'\n\nconst Stage = ({ stage }) => (\n  <StyledStage width={stage[0].length} height={stage.length}>\n    {stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}  \n  </StyledStage>\n)\n\nexport default Stage","import styled from 'styled-components'\n\nexport const StyledDisplay = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  margin: 0 0 20px 0;\n  padding: 20px;\n  border: 4px solid #ddd;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  color: ${props => (props.gameOver ? 'red' : '#737373')};\n  background: #f2f2f2;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 0.8rem;\n`","import React from 'react'\nimport { StyledDisplay } from './styles/StyledDisplay'\n\nconst Display = ({ gameOver, text }) => (\n  <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\n)\n\nexport default Display","import lodash from 'lodash'\n\nimport { checkCollision } from './files/gameHelpers'\n\nconst AI = (player, stage) => {\n  \n  const a = -0.51066\n  const b = 0.76066\n  const c = -0.35663\n  const d = -0.184483\n\n  let playerCopy = lodash.cloneDeep(player)\n  let stageCopy = lodash.cloneDeep(stage)\n  \n  const rotate = (matrix, dir) => {\n    // Make the rows into columns (transpose)\n    const rotatedTetro = matrix.map((_, index) => \n      matrix.map(col => col[index])\n    )\n    // Reverse each row to get a rotated matrix\n    if (dir > 0) return rotatedTetro.map(row => row.reverse())\n    return rotatedTetro.reverse()\n  }\n  \n  const updatePlayerPos = (playerCopy, x, y, collided) => {\n      playerCopy.pos.x += x\n      playerCopy.pos.y += y\n      player.collided = collided\n  }\n  \n  const updateStage = (playerCopy, stageCopy) => {\n    // First flush the stage\n    // Take the previous stage and map through each row\n    const newStage = stageCopy.map(row => \n      // Take the row and map through every cell\n      row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell)), // For every cell check if it is clear or filled, in which case write the new stage's cell in that row as clear or filled\n    )\n\n    // Then draw the tetromino\n    // For each row\n    playerCopy.tetromino.forEach((row, y) => {\n      // For each cell\n      row.forEach((value, x) => {\n        // If the value of that cell is not 0\n        if (value !== 0) {\n          // Update the position of that cell on the next stage\n          newStage[y + playerCopy.pos.y][x + playerCopy.pos.x] = [ // newStage at position x by y =\n            value, // value of the tetromino\n            `${playerCopy.collided ? 'merged' : 'clear'}`, // if it is cleared or merged\n          ]\n        }\n      })\n    })\n    return newStage\n  }\n  \n  // !!!!!!!!! - Scoring functions\n\n  const holes = (arenaCopy) => {\n    let holes = 0\n    for (let x = 0; x < arenaCopy[0].length; x++) {\n        for (let y = arenaCopy.length-1; y > -1; y--) {\n            if (arenaCopy[y][x][0] === 0) {\n                let count = 0;\n                for (let i = y-1; i > 0; i--) {\n                    count++\n                    if (arenaCopy[i][x][0] !== 0) {\n                        holes = holes+count\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    return holes\n  }\n\n  const aggregateHeight = (arenaCopy) => {\n    let work = []\n    for (let x = 0; x < arenaCopy[0].length; x++) {\n        let current = 0\n        for (let y = arenaCopy.length-1; y > -1; y--) {\n            if (arenaCopy[y][x][0] !== 0) {\n                current = 20-y\n            }\n        }\n        work.push(current)\n    }\n\n    let final = lodash.sum(work)\n    return final\n  }\n\n  const bump = (arenaCopy) => {\n    let work = []\n    for (let x = 0; x < arenaCopy[0].length; x++) {\n        let current = 0\n        for (let y = arenaCopy.length-1; y > -1; y--) {\n            if (arenaCopy[y][x][0] !== 0) {\n                current = 20-y\n            }\n        }\n        work.push(current)\n    }\n    \n    let bump = 0;\n    for (let i = 0; i < work.length; i+=1) {\n        if (i+1 < work.length)\n            bump = bump + Math.abs(work[i]-work[i+1])\n    }\n    return bump\n  }\n  \n  const completedLines = (arenaCopy) => {\n    let count = 0;\n    for (let y = 0; y < arenaCopy.length; y++) {\n      let full = true\n      for (let x = 0; x < arenaCopy[0].length; x++) {\n        if (arenaCopy[y][x][0] === 0) {\n          full = false\n        }\n      }  \n      if (full) {\n        count++\n      }\n    }\n    return count\n  }\n\n  const simulate = () => {\n    let finalS = -200;\n    let posX = null;\n    let finalR = null;\n    let count = 0;\n\n    for (let r=0; r<4; r++) {\n      for (let x = 0; x < stageCopy[0].length-1; x++) {\n        let rc = r;\n        let playerCopy = lodash.cloneDeep(player)\n        let stageCopy = lodash.cloneDeep(stage)\n\n        while (rc > 0) {\n          let pos = playerCopy.pos.x\n          let offset = 1\n          playerCopy.tetromino = rotate(playerCopy.tetromino, 1)\n          while(checkCollision(playerCopy, stageCopy, { x: 0, y: 0 })) {\n            playerCopy.pos.x += offset\n            offset = -(offset + (offset > 0 ? 1 : -1))\n            if (offset > playerCopy.tetromino[0].length) {\n              playerCopy.tetromino = rotate(playerCopy.tetromino, -1)\n              playerCopy.pos.x = pos\n              break;\n            }\n          }\n          rc-=1\n        }\n\n        playerCopy.pos.y = 0\n        playerCopy.pos.x = 0\n        \n        for (let m = x; m > 0; m--) {\n          if (checkCollision(playerCopy, stageCopy, { x: 1, y: 0})) {\n          } else {\n            playerCopy.pos.x += 1\n          }\n        }\n\n        while (!checkCollision(playerCopy, stageCopy, { x: 0, y: 1})) {\n           updatePlayerPos(playerCopy, 0, 1, false)\n        }\n\n        stageCopy = updateStage(playerCopy, stageCopy);\n        \n        let lines = completedLines(stageCopy)\n        let aggHeight = aggregateHeight(stageCopy)\n        let holeCount = holes(stageCopy)\n        let bumpCount = bump(stageCopy)\n\n        let score = (a * aggHeight) + (b * lines) + (c * holeCount) + (d * bumpCount)\n\n        if (score > finalS) {\n            posX = x\n            finalS = score\n            finalR = r\n        }\n        count++\n      }\n    }\n    return [posX, finalR]\n  }\n  \n  let ai_guess = simulate()\n  return ai_guess\n}\n\nexport default AI","import React, { useState, useEffect } from 'react'\n\nimport { createStage, checkCollision } from './files/gameHelpers'\n\n// Styled Components\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris'\n\n// Custom Hooks\nimport { useInterval } from './hooks/useInterval'\nimport { usePlayer } from './hooks/usePlayer'\nimport { useStage } from './hooks/useStage'\nimport { useGameStatus } from './hooks/useGameStatus'\n\n// Components\nimport Stage from './Stage'\nimport Display from './Display'\nimport AI from './ai'\n\nconst TetrisDemo = () => {\n  const [ dropTime, setDropTime ] = useState(null)\n  const [ gameOver, setGameOver ] = useState(false)\n\n  const [ player, updatePlayerPos, resetPlayer, playerRotate ] = usePlayer()\n  const [ stage, setStage, rowsCleared ] = useStage(player, resetPlayer)\n  const [ score, setScore, rows, setRows, level, setLevel ] = useGameStatus(rowsCleared)\n\n  //console.log('re-render')\n\n  const movePlayer = dir => {\n    if (!checkCollision(player, stage, { x: (dir), y: 0})) {\n      updatePlayerPos({ x: dir, y: 0 })\n    }\n  }\n\n  const startGame = () => {\n    // Reset everything\n    setStage(createStage())\n    setDropTime(100)\n    resetPlayer()\n    setGameOver(false)\n    setScore(0)\n    setRows(0)\n    setLevel(0)\n  }\n\n  const drop = () => {\n    if (!checkCollision(player, stage, { x: 0, y: 1 })) {\n      updatePlayerPos({ x: 0, y: 1, collided: false })\n    } else {\n      // Game over\n      if (player.pos.y < 1) {\n        //console.log('GAME OVER!!!')\n        setGameOver(true)\n        setDropTime(null)\n      }\n      updatePlayerPos({ x: 0, y: 0, collided: true })\n    }\n  }\n\n  const autoPlay = async () => {\n    let move = await AI(player, stage)\n    //console.log(move[1])\n    if (move[1] !== 0) {\n      for (let x = move[1]; x > 0; x--) {\n        playerRotate(stage, 1)\n      }\n    }\n    \n    let blank = true\n    for (let y = 0; y < player.tetromino.length; y++) {\n        if (player.tetromino[y][0] !== 0) {\n            blank = false\n        }\n    }\n\n    if (blank) {\n      if (move[0] === 0) {\n          movePlayer(-1)\n      } else if (move[0] < player.pos.x) {\n          movePlayer(-1)\n      } else if (move[0] > player.pos.x) {\n          movePlayer(1)\n      }\n    } else {\n      // no blank column next to the piece\n      if (move[0] !== player.pos.x) {\n        if (move[0] < player.pos.x) {\n          movePlayer(-1)\n        } else if (move[0] > player.pos.x) {\n          movePlayer(1)\n        }\n      }\n    }\n  }\n  \n  useInterval(() => {\n    autoPlay();\n    drop();\n  }, dropTime)\n\n  useEffect(() => {\n    startGame();\n  }, [gameOver]) \n\n  return (\n    <StyledTetrisWrapper\n        role=\"button\" \n        tabIndex=\"0\">\n      <StyledTetris>\n        <Stage stage={stage} />\n        <aside>\n            <div>\n              <Display text={`Score: ${score}`} />\n              <Display text={`Rows: ${rows}`} />\n              <Display text={`Level: ${level}`} />\n            </div>\n        </aside>\n      </StyledTetris>\n    </StyledTetrisWrapper>\n  )\n}\n\nexport default TetrisDemo","import { useState, useCallback } from 'react'\n\nimport { TETROMINOS, randomTetromino } from '../files/tetrominos'\nimport { checkCollision, STAGE_WIDTH } from '../files/gameHelpers'\n\nexport const usePlayer = () => {\n  const [ player, setPlayer ] = useState({\n    pos: { x: 0, y: 0 },\n    tetromino: TETROMINOS[0].shape,\n    collided: false,\n  })\n\n  const rotate = (matrix, dir) => {\n    // Make the rows into columns (transpose)\n    const rotatedTetro = matrix.map((_, index) => \n      matrix.map(col => col[index])\n    )\n    // Reverse each row to get a rotated matrix\n    if (dir > 0) return rotatedTetro.map(row => row.reverse())\n    return rotatedTetro.reverse()\n  }\n\n  const playerRotate = (stage, dir) => {\n    const clonedPlayer = JSON.parse(JSON.stringify(player))\n    clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir)\n\n    const pos = clonedPlayer.pos.x\n    let offset = 1\n    while(checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\n      clonedPlayer.pos.x += offset\n      offset = -(offset + (offset > 0 ? 1 : -1))\n      if (offset > clonedPlayer.tetromino[0].length) {\n        rotate(clonedPlayer.tetromino, -dir)\n        clonedPlayer.pos.x = pos\n        return\n      }\n    }\n\n    setPlayer(clonedPlayer)\n  }\n  \n  const updatePlayerPos = ({ x, y, collided }) => {\n    setPlayer(prev => ({\n      ...prev,\n      pos: { x: (prev.pos.x += x), y: (prev.pos.y += y)},\n      collided,\n    }))\n  }\n\n  const resetPlayer = useCallback(() => {\n    setPlayer({\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\n      tetromino: randomTetromino().shape,\n      collided: false,\n    })\n  }, [])\n\n  return [player, updatePlayerPos, resetPlayer, playerRotate]\n}","import { useState, useEffect, useCallback } from 'react'\n\nexport const useGameStatus = rowsCleared => {\n  const [ score, setScore ] = useState(0)\n  const [ rows, setRows ] = useState(0)\n  const [ level, setLevel ] = useState(0)\n\n  const linePoints = [40, 100, 300, 1200]\n\n  const calcScore = useCallback(() => {\n    // We have score\n    if (rowsCleared > 0) {\n      // This is how original Tetris score is calculated\n      setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1))\n      setRows(prev => prev + rowsCleared)\n    }\n  }, [level, linePoints, rowsCleared])\n\n  useEffect(() => {\n    calcScore()\n  }, [calcScore, rowsCleared, score])\n\n  return [score, setScore, rows, setRows, level, setLevel]\n}","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import { useAuthState } from '../../firebase'\nimport TetrisDemo from '../tetris/tetrisDemo/Tetris'\n\nexport const Home = () => {\n  const { user } = useAuthState() // Returns user object, can access user.UID from that.\n  \n  return (\n    <>\n      <h1>Hello {user?.displayName}, Welcome to Tetris-Lite. <br/></h1>\n      <TetrisDemo />\n    </>\n  )\n}\n","import { getFirestore, collection, query, getDocs, setDoc, doc, updateDoc, increment, getDoc } from \"firebase/firestore\"\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\"\nimport { Upgrade } from '../Upgrade'\n\n\n\nimport {useState, useEffect} from \"react\"\n\n\nconst db = getFirestore()\n\nconst auth = getAuth()\nlet userUID = ''\n\n\nonAuthStateChanged(auth, (user => {\n  \n  if (user) {\n    userUID = user.uid // Get user's UID\n  }\n}))\n\n// Get the total points in the userUID document in the users collection\nexport const GetPoints = async () => {\n  const docRef = doc(db, \"users\", userUID)\n  const docSnap = await getDoc(docRef) // Get the information out of the userUID document\n  const points = parseInt(docSnap.data().points) // Specifically get the points value\n  // console.log('RETRIEVED POINTS: ', points)\n  return points\n}\n\nexport const GetUpgrades = async () => {\n  const upgradesRef = collection(db, `users/${userUID}/upgrades`) // Where all the upgrades are saved\n  const q = query(upgradesRef) // Query all documents at upgradesRef\n  const querySnapshot = await getDocs(q) // Get those documents\n  let upgrades = {}\n  querySnapshot.forEach((doc) => {\n    const upgradeName = doc.id // Get upgradeName from ID\n    const levelObj = doc.data() // Retrieve object with document data\n    const level = levelObj.level // Get the level of the upgrade from levelObj\n    upgrades[upgradeName] = level // Assign upgrade name and level to key/value pair in upgrades object\n  })\n  return upgrades\n}\n\nexport const SaveUpgrade = async (upgradeName, level, cost) => {\n  \n  await setDoc(doc(db, `users/${userUID}/upgrades`, upgradeName), { // Set document path ending in ID of upgradeName\n    level: level, // Save the upgrade level in above document\n  })\n  SpendPoints(cost)\n\n}\n\nexport const SpendPoints = async (cost) => { // cost needs to be a positive integer\n  \n  \n  const pointsRef = doc(db, `users`, userUID) // Document path\n  await updateDoc(pointsRef, {\n    points: increment(-cost) // remove cost value from points\n  })\n  \n\n}\n\n","export default __webpack_public_path__ + \"static/media/crystal_ball.8c7e5141.jpeg\";","import React, { useEffect, useState } from 'react'\nimport { Container, Image, Button, Card, Icon, Label, Divider, Grid } from 'semantic-ui-react'\nimport { useAuthState } from '../../../firebase'\nimport { GetPoints, GetUpgrades, SaveUpgrade, SpendPoints } from './UpgradesFirebase'\nimport {UpgradeCards} from '../Upgrade'\nimport crystalBall from '../../../img/crystal_ball.jpeg'\n\n\n\nexport const LookAheadCard = (props) => {\n\n  \n  let upgradeName = \"lookAhead\";\n\n\n  const UpgradeClick = () => {\n    SaveUpgrade(upgradeName,level,cost)\n    props.updateLevelState(upgradeName, level)\n  }\n\n  //UPGRADE COST LOGIC\n  // object of upgrade cost\n  const upgradeToLevelCost = {\n    \"1\":500,\n    \"2\":1000,\n    \"3\":2000,\n    \"4\":3000,\n    \"5\":4000\n  }\n\n  // assign to a variable, which adds 1 to the current level from props\n  // if current level is 5, set upgradeToLevel as 6, over max, cant do, handled below\n  \n  var level = (1 + props.lookAheadLevel)\n  var cost = parseInt(upgradeToLevelCost[level])\n  var points = parseInt(props.pointsToSpend)\n  var short = cost - points\n\n  if (level > 5) {\n    var upgradeButton = \n      \"Max Level\"\n  } else if (cost > points){\n    var upgradeButton = \n    <div className='button'>\n      <Button as='div' labelPosition='left'>\n        <Label basic pointing='right'>\n          {/* // pass in next level */}\n          Upgrade: {level}: Requires {short} more.\n        </Label>\n      </Button>\n    </div>\n  } else {\n      // set UpgradeCost to upgrade level cost in upgradeToLevel object of level:cost\n      // then render upgrade button.\n    var upgradeButton = \n    <div className='button'>\n      <Button as='div' labelPosition='left'>\n        <Label basic pointing='right'>\n          {/* // pass in next level */}\n          Upgrade: {level}\n        </Label>\n        <Button icon onClick={UpgradeClick}>\n          <Icon name='arrow alternate circle up outline' />\n          {/* // pass in upgrade cost */}\n          {cost}\n        </Button>\n      </Button>\n    </div>\n  }\n    \n    //////// End upgrade Cost logic\n\n  return(\n    <Card>\n      <Image src={crystalBall} alt=\"Crystal Ball\" height=\"232px\" />\n      <Card.Content>\n        <Card.Header>Fore Sight</Card.Header>\n        <Card.Meta>\n        {/* call function to grab int level */}\n          <span className='level'>Current level: {props.lookAheadLevel}</span> \n        </Card.Meta>\n        <Card.Description >\n        <p>\n          <br />\n        Each upgrade grants 1 additional future piece to be seen.\n          <br />\n          <br />\n        </p>\n        </Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n      {/* button conditionally rendered in upgrade cost logic */}\n      {upgradeButton}\n      </Card.Content>\n    </Card>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/timeDilation.9829ebfb.jpeg\";","import React, { useState } from 'react'\nimport { Container, Image, Button, Card, Icon, Label, Divider, Grid} from 'semantic-ui-react'\nimport { useAuthState } from '../../../firebase'\nimport { GetPoints, GetUpgrades, SaveUpgrade, SpendPoints } from './UpgradesFirebase'\nimport timeDilation from '../../../img/timeDilation.jpeg'\n\n\n\nexport const DropSpeedCard = (props) => {\n\n  let upgradeName = \"dropSpeed\";\n\n\n  const UpgradeClick = () => {\n    SaveUpgrade(upgradeName,level,cost)\n    props.updateLevelState(upgradeName, level)\n  }\n\n  //UPGRADE COST LOGIC\n  // object of upgrade cost\n  const upgradeToLevelCost = {\n    \"1\":200,\n    \"2\":400,\n    \"3\":600,\n    \"4\":800,\n    \"5\":1000,\n    \"6\":1200,\n    \"7\":1400,\n    \"8\":1600,\n    \"9\":1800,\n    \"10\":2000,\n  }\n\n  // assign to a variable, which adds 1 to the current level from props\n  // if current level is 5, set upgradeToLevel as 6, over max, cant do, handled below\n  \n  var level = (1 + props.dropSpeedLevel)\n  var cost = parseInt(upgradeToLevelCost[level])\n  var points = parseInt(props.pointsToSpend)\n  var short = cost - points\n\n  if (level > 10) {\n    var upgradeButton = \n      \"Max Level\"\n  } else if (cost > points){\n    var upgradeButton = \n    <div className='button'>\n      <Button as='div' labelPosition='left'>\n        <Label basic pointing='right'>\n          {/* // pass in next level */}\n          Upgrade: {level}: Requires {short} more.\n        </Label>\n      </Button>\n    </div>\n  } else {\n      // set UpgradeCost to upgrade level cost in upgradeToLevel object of level:cost\n      // then render upgrade button.\n    var upgradeButton = \n    <div className='button'>\n      <Button as='div' labelPosition='left'>\n        <Label basic pointing='right'>\n          {/* // pass in next level */}\n          Upgrade: {level}\n        </Label>\n        <Button icon onClick={UpgradeClick}>\n          <Icon name='arrow alternate circle up outline' />\n          {/* // pass in upgrade cost */}\n          {cost}\n        </Button>\n      </Button>\n    </div>\n  }\n    \n    //////// End upgrade Cost logic\n\n  return(\n    <Card>\n      <Image src={timeDilation} alt=\"Time Dilation\" height=\"232px\"/>\n      <Card.Content>\n        <Card.Header>Time Dilation</Card.Header>\n        <Card.Meta>\n          <span className='level'>Current level: {props.dropSpeedLevel}</span>\n        </Card.Meta>\n        <Card.Description height=\"100px\">\n          <p>\n          <br />\n          Each upgrade distorts time, causing tetramino's to fall to earth slower.\n          <br />\n          <br />\n          </p>\n        </Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n      {/* button conditionally rendered in upgrade cost logic */}\n      {upgradeButton}\n      </Card.Content>\n    </Card>\n  )\n}\n","import React, { useEffect, useState, useLayoutEffect } from 'react'\nimport { Container, Image, Button, Card, Icon, Label, Divider, Grid } from 'semantic-ui-react'\nimport { useAuthState } from '../../firebase'\nimport { GetPoints, GetUpgrades, SaveUpgrade, SpendPoints } from './UpgradeFiles/UpgradesFirebase'\nimport { LookAheadCard } from './UpgradeFiles/LookAhead'\nimport { DropSpeedCard } from './UpgradeFiles/DropSpeed'\nimport { DemolitionChargeCard } from './UpgradeFiles/DemolitionCharge'\n\n\n// a container < that contains a row < of columns which have individual upgrade card components imported\nexport const UpgradeCards = () => {\n\n  // Get upgrade levels from database\n  // return upgrade cards with level data\n\n  // get user\n  const { user } = useAuthState() // Returns user object, can access user.UID from that.\n\n  // establish state to set the level, Levels will be the state int\n  const [lookAheadLevel, setlookAheadLevel] = useState(0);\n  const [dropSpeedLevel, setdropSpeedLevel] = useState(0);\n  const [demolitionChargeLevel, setdemolitionChargeLevel] = useState(0);\n  \n  // use state to get points available\n  const [pointsToSpend, setPointsToSpend] = useState(0);\n  \n  const negPointsQuickFix = () => {\n    if (pointsToSpend < 0) {\n      userAvailablePoints()\n    }\n  }\n  \n  \n  \n\n\n  // pull in upgrade levels from firebase. GetUpgrades db call from UpgradesFirebase.js\n  useEffect(() => {\n\n    // main function to call the database\n    const upgradeLevelsImport = async () => {\n\n      \n    \n      // create variable to store level, calls GetUpgrades\n      const upgradeLevels = await GetUpgrades();\n    \n      // lookAhead upgrade\n      if (isNaN(upgradeLevels['lookAhead'])){\n        upgradeLevels['lookAhead'] = 0;\n        setlookAheadLevel(upgradeLevels['lookAhead'])}\n      else{\n      setlookAheadLevel(upgradeLevels['lookAhead'])}\n\n      // dropSpeed upgrade\n      if (isNaN(upgradeLevels['dropSpeed'])){\n        upgradeLevels['dropSpeed'] = 0;\n        setdropSpeedLevel(upgradeLevels['dropSpeed'])}\n      else{\n      setdropSpeedLevel(upgradeLevels['dropSpeed'])}\n\n      // demoCharge upgrade\n      if (isNaN(upgradeLevels['demolitionCharge'])){\n        upgradeLevels['demolitionCharge'] = 0;\n        setdemolitionChargeLevel(upgradeLevels['demolitionCharge'])}\n      else{\n      setdemolitionChargeLevel(upgradeLevels['demolitionCharge'])}\n\n      \n    \n      \n    }\n    // call the function to complete the promise\n    upgradeLevelsImport()\n\n  }, [])\n\n  // pull in user points from firebase. GetPoints db call from UpgradesFirebase.js\n  const userAvailablePoints = async () => {\n    \n    const availablePoints = await GetPoints()\n    setPointsToSpend(availablePoints)\n    negPointsQuickFix()\n    \n    \n  }\n  userAvailablePoints()\n\n  // passed down to upgrade cards, upgrade cards call on upgrade\n  const updateLevelState = (card, level) => {\n    if (card == 'lookAhead') {\n      setlookAheadLevel(level)\n    } else if (card == 'dropSpeed') {\n      setdropSpeedLevel(level)\n    } else if (card == 'demolitionCharge') {\n      setdemolitionChargeLevel(level)\n    }\n    //db slower than render, calling upgrade points later in the chain.\n    userAvailablePoints()\n  }\n\n  // creates header which is setup to be a row of equally divided/spaced parts, pieces may be added to it.\n  const UserPointsBar = () => {\n    return(\n    <Grid columns='equal'>\n      <Grid.Column>\n        {user?.displayName}\n      </Grid.Column>\n      {/* column 2 */}\n      <Grid.Column width={8}>\n        <span>&nbsp;&nbsp;&nbsp;&nbsp;{user?.email}</span>\n      </Grid.Column>\n      {/* column 3 */}\n      <Grid.Column>\n        Points: {pointsToSpend}\n      </Grid.Column>\n    </Grid>\n    )\n  }\n\n  return(\n    <>\n    \n    <UserPointsBar/>\n    <Divider section/>\n      <Container>\n        <Grid columns='equal'>\n\n          {/* 1st upgrade card */}\n          <Grid.Column>\n            <LookAheadCard lookAheadLevel={lookAheadLevel} updateLevelState={updateLevelState} pointsToSpend={pointsToSpend}/>\n          </Grid.Column>\n\n          {/* 2nd upgrade card */}\n          <Grid.Column>\n            <DropSpeedCard dropSpeedLevel={dropSpeedLevel} updateLevelState={updateLevelState} pointsToSpend={pointsToSpend}/>\n          </Grid.Column>\n\n          {/* 3rd upgrade card */}\n          {/* <Grid.Column>\n            <DemolitionChargeCard demolitionChargeLevel={demolitionChargeLevel} updateLevelState={updateLevelState} pointsToSpend={pointsToSpend}/>\n          </Grid.Column> */}\n\n        </Grid>\n      </Container>\n    </>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/M118.f6a13bce.jpeg\";","import { useCallback } from 'react' // DOC: https://reactjs.org/docs/hooks-reference.html#usecallback\nimport { getAuth, createUserWithEmailAndPassword, onAuthStateChanged,updateProfile} from 'firebase/auth'\nimport { getFirestore, doc, setDoc } from \"firebase/firestore\"\nimport { Button, Form } from 'semantic-ui-react'\n\nexport const SignUp = (props) => {\n\n  const handleSubmit = useCallback(async e => {\n    e.preventDefault()\n\n    const db = getFirestore()\n\n    // takes 3 elements passed into handleSubmit\n    const { email,display, password, password2 } = e.target.elements\n    const auth = getAuth() // DOC: https://firebase.google.com/docs/reference/unity/class/firebase/auth/firebase-auth\n\n    // if passwords are equal, attempt to create new user on db\n    if (password.value === password2.value)\n      try {\n        const newUser = await createUserWithEmailAndPassword(auth, email.value, password.value) // Attempt to create new user\n        console.log('USER: ', newUser.user.uid)\n        onAuthStateChanged(auth, (async (user) => {\n          if (user) {\n            await updateProfile(user, {displayName: display.value})\n            console.log('Profile updated with new displayname')\n          }\n        }))\n        await setDoc(doc(db, \"users\", newUser.user.uid), {\n          points: 0,\n        })\n        props.history.push('/')\n      } catch (e) {\n        console.log(e)\n      }\n    // if passwords are not equal, prompt error.\n    else\n      alert(\"Passwords do not match\");\n  }, [props.history])\n\n  return (\n    <>\n      <h1>Sign Up</h1>\n        <Form onSubmit={handleSubmit}>\n          <Form.Field>\n            <label>Email Address</label>\n            <input\n              name=\"email\"\n              placeholder=\"Email\"\n              type=\"email\"\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Display Name</label>\n            <input\n              name=\"display\"\n              placeholder=\"Display Name\"\n              type=\"text\"\n            />\n          </Form.Field>\n          <Form.Field>\n            <label >Password</label>\n            <input \n              type='password' \n              placeholder='Password'\n              name=\"password\"\n            />\n          </Form.Field>\n          <Form.Field>\n            <label >Confirm Password</label>\n            <input \n              type='password' \n              placeholder='Confirm Password'\n              name=\"password2\"\n            />\n          </Form.Field>\n          <Button type='submit'>\n              Register\n          </Button>\n      </Form>\n    </>\n  )\n}\n\n","import { useCallback } from 'react' // DOC: https://reactjs.org/docs/hooks-reference.html#usecallback\nimport { getAuth, signInWithEmailAndPassword } from 'firebase/auth'\nimport { Button, Form } from 'semantic-ui-react'\n\nexport const Login = () => {\n  const handleSubmit = useCallback(async e => {\n    e.preventDefault()\n\n    const { email, password } = e.target.elements // Get email and password objects from form\n    const auth = getAuth() // DOC: https://firebase.google.com/docs/reference/unity/class/firebase/auth/firebase-auth\n    try {\n      await signInWithEmailAndPassword(auth, email.value, password.value) // Attempt to log in\n    } catch (e) {\n      alert(e.message)\n    }\n  }, [])\n\n  return (\n    <>\n      <h1>Login</h1>\n      <Form onSubmit={handleSubmit}>\n        <Form.Field>\n          <label>Email</label>\n          <input\n            name=\"email\"\n            placeholder=\"email\"\n            type=\"email\"\n          />\n        </Form.Field>\n        <Form.Field>\n          <label >Password</label>\n          <input \n            type='password' \n            placeholder='password'\n            name=\"password\"\n          />\n        </Form.Field>\n        <Button type='submit'>\n            Log In\n        </Button>\n      </Form>\n    </>\n  )\n}\n","import React from 'react'\nimport { Icon, Menu } from 'semantic-ui-react'\nimport { NavLink} from 'react-router-dom'\nimport { getAuth, signOut } from 'firebase/auth'\n\n\n// Icon names found at https://semantic-ui.com/elements/icon.html#status\n\nconst AuthNavBar = () => {\n\n  return (\n    <Menu icon='labeled'>\n          {/* first item, give link, and component name (dev tools menu item name) */}\n          <Menu.Item\n            as={NavLink} exact to=\"/\"\n            name='home'\n            // add a divider for html txt\n          >\n            {/* set icon by name from icon names url */}\n            <Icon name='home'/>\n            {/* text to label navbar menu item */}\n            Home\n          </Menu.Item>\n          <Menu.Item\n            as={NavLink} exact to=\"/profile\"\n            name='profile'\n          >\n            <Icon name='user'/>\n            Profile\n          </Menu.Item>\n          <Menu.Item\n            as={NavLink} exact to=\"/tetris\"\n            name='tetris'\n          >\n            <Icon name='gamepad'/>\n            Tetris\n          </Menu.Item>\n\n          {/* menu position right starts elements on right side of navbar */}\n          <Menu.Menu position='right'>\n            {/* Logout button logs out on click, since its unauthenticated, gets thrown to home, which redirects to login */}\n            <Menu.Item\n            as={NavLink} exact to=\"/upgrade\"\n            name='upgrade'\n            >\n            <Icon name='arrow alternate circle up outline'/>\n            Upgrade\n            </Menu.Item>\n            \n            <Menu.Item\n            as={NavLink} exact to=\"/leaderboard\"\n            name='leaderboard'\n            >\n            <Icon name='table'/>\n            Leader Board\n            </Menu.Item>\n\n            {/* <Menu.Item\n            as={NavLink} exact to=\"/forum\"\n            name='Forum'\n            >\n            <Icon name='comments'/>\n            Forum\n            </Menu.Item> */}\n\n            <Menu.Item\n              name='logout'\n              onClick={() => signOut(getAuth())}\n            >\n              <Icon name='sign out alternate'/>\n              Logout\n            </Menu.Item>\n          </Menu.Menu>\n        </Menu>\n  )\n}\n\nexport default AuthNavBar;","import { Icon, Menu } from 'semantic-ui-react'\nimport { NavLink} from 'react-router-dom'\n\n// Icon names found at https://semantic-ui.com/elements/icon.html#status\n\nconst UnAuthNavBar = () => {\n\n  return (\n    <Menu icon='labeled'>\n      {/* first item, give link, and component name (dev tools menu item name) */}\n      {/* <Menu.Item\n        as={NavLink} exact to=\"/\"\n        name='home' */}\n        {/* // add a divider for html txt\n      // > */}\n        {/* set icon by name from icon names url */}\n        {/* <Icon name='home'/> */}\n        {/* text to label navbar menu item */}\n        {/* Home\n      </Menu.Item> */}\n      <Menu.Item\n        as={NavLink} exact to=\"/login\"\n        name='login'\n      >\n        <Icon name='sign in alternate'/>\n        Login\n      </Menu.Item>\n      <Menu.Item\n        as={NavLink} exact to=\"/signup\"\n        name='signup'\n      >\n        <Icon name='plus'/>\n        Register\n      </Menu.Item>\n    </Menu>\n  )\n}\n\nexport default UnAuthNavBar","import { useAuthState } from '../../firebase'\nimport AuthNavBar from './authNavBar'\nimport UnAuthNavBar from './unAuthNavBar'\n\n// Icon names found at https://semantic-ui.com/elements/icon.html#status\n\n\nconst Navbar = () => {\n  \n  const { isAuthenticated } = useAuthState()\n\n  //function to retrieve the authBar or unAuthBar\n  const renderedNavbar = () => {\n    // If user is authenticated render necessary links if not render necessary links.\n    if (isAuthenticated === true)\n    // is logged in\n      return (\n        AuthNavBar()\n      )\n    // is not logged in\n    else\n      return (\n        UnAuthNavBar()\n      )\n    }\n\n    //return value of function deciding between which bars\n    return (\n      renderedNavbar()\n    )\n  \n}\n\nexport default Navbar;","import { getAuth, signOut } from '@firebase/auth';\nimport React from 'react'\nimport { Link,useLocation } from 'react-router-dom'\nimport { Icon } from 'semantic-ui-react'\nconst SidebarNav = () => {\n    const location = useLocation();\n    return (\n        // side bar menu code from bootsnip #2 Your Profile\n        <div className=\"col-md-3\">\n            <div className=\"list-group \">\n                {/* showing active class based on location path name from browser URL */}\n                        <Link to=\"/profile\" className={location.pathname === \"/profile\" ? \"list-group-item list-group-item-action active\" : \"list-group-item list-group-item-action\"}><Icon name='user'/> Profile</Link>\n                        <Link to=\"/leaderboard\" className={location.pathname === \"/leaderboard\" ? \"list-group-item list-group-item-action active\" : \"list-group-item list-group-item-action\"}><Icon name='table'/> Leader Board</Link>\n                        <Link to=\"/change-password\" className={location.pathname === \"/change-password\" ? \"list-group-item list-group-item-action active\" : \"list-group-item list-group-item-action\"}><Icon name='lock'/>  Change Password</Link>\n                        {/* <Link to=\"/forum\" className={location.pathname.includes(\"forum\") ? \"list-group-item list-group-item-action active\" : \"list-group-item list-group-item-action\"}><Icon name='blogger'/>  Forum</Link> */}\n                        <Link to=\"/\" onClick={() => signOut(getAuth())} className={location.pathname === \"/logout\" ? \"list-group-item list-group-item-action active\" : \"list-group-item list-group-item-action\"}><Icon name='sign out alternate'/> Logout</Link>\n            </div>\n        </div>\n    )\n}\n\nexport default SidebarNav","import { getFirestore, doc, updateDoc, getDoc, setDoc, addDoc, serverTimestamp, collection } from \"firebase/firestore\"\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\"\nconst db = getFirestore()\n\n\nconst auth = getAuth()\nlet userUID = ''\nlet userName = ''\nonAuthStateChanged(auth, (user => {\n  userUID = user ? user.uid : '' // Get user's UID\n  userName = user ? user.displayName : ''// Get user's display name\n}))\n\n// Update the total points in the userUID document in the users collection for specific users who is\n//logged in \nexport const UpdatePoints = async (score) => {\n  // gets users by ID and then update records in firebase colleciton \n  const updateRef = doc(db, \"users\", userUID)\n  // await can be put in front of any asynchrouous function to push your code on that line until the \n  //promises fullfulls then returns the result value\n  //await will hold the execution till we never get response or result\n  await updateDoc(updateRef, {\n    points: score\n  })\n}\n\n// Get the total points in the userUID document in the users collection\nexport const GetPoints = async () => {\n    // we are getting all files for a specific user from the firebase collection\n  const docRef = doc(db, \"users\", userUID)\n  //got all document references from firebase by userID and repoplulating using getDoc method\n  const docSnap = await getDoc(docRef) // Get the information out of the userUID document\n  let points = 0;\n  //console.log(docSnap.data());\n  //We are checking the docSnap is getting earlier records from firebase or not\n  //If user will paly the first time this games then we will get undefined or null value from firebase so \n  //We have checked he condtion  and handle error here.\n  if(docSnap.data()){\n    points = parseInt(docSnap.data().points) // Specifically get the points value\n  }\n  // console.log('RETRIEVED POINTS: ', points)\n  return points\n}\n\nexport const UpdateLeaderBoards = async (total, score) => {\n\n  // Does a username exist? \n  let displayName = userName // If so set displayName to that username\n  if (userName === null) { // If not, set displayName to Anonymous\n    displayName = 'Anonymous'\n  }\n\n  // Set the total points leaderboard entry\n  await setDoc(doc(db, 'leaderboards/default/TotalPoints', userUID), { // Set the userUID document in the TotalPoints leaderboard to the values below\n    name: displayName,\n    score: total,\n    timestamp: serverTimestamp()\n  })\n\n  // Set the Individual Game points leaderboard entry IF it is >= current highscore\n  const docRef = doc(db, \"leaderboards/default/IndividualGamePoints\", userUID) // path to read\n  const docSnap = await getDoc(docRef) // Get data from document userUID\n  let highscore = 0\n  if (docSnap.exists()) { // Does a highscore already exist in docSnap?\n    highscore = parseInt(docSnap.data().score) // Set highscore to that score\n  }\n  if (score >= highscore) { // Is the current game's score higher than the pre-existing high score?\n    await setDoc(doc(db, 'leaderboards/default/IndividualGamePoints', userUID), { // Set the userUID document in the IndividualGamePoints leaderboard to the values below\n      name: displayName,\n      score: score,\n      timestamp: serverTimestamp()\n    })\n  }\n\n  // Set personal Individual Game leaderboard\n  await addDoc(collection(db, `users/${userUID}/personalLeaderboard`), { // path to write values below\n    score: score,\n    timestamp: serverTimestamp()\n  })\n}\n\nexport const updateUsername = (name) => {\n  userName = name\n}","import React,{useState,useCallback} from 'react'\nimport { useAuthState } from '../../firebase';\nimport {  updateProfile,updateEmail } from 'firebase/auth'\nimport SidebarNav from './SidebarNav'\nimport { updateUsername } from '../tetris/files/fireBaseIntegration';\n\nconst ProfilePage = () => {\n    //setting up error messages\n    //fnError equals first name error\n    //lnError equals is false\n    //emailError is false\n    let defaultError = {fnError:false,lnError:false, emailError:false};\n    const[error,setError] = useState(defaultError);\n    //getting current user who is logged in\n    const { user } = useAuthState();\n    //display firstname, lastname, email on form\n    let defaultFormData = {fName:user.displayName,lName:'',email:user.email};\n    //default form data put in state\n    const[formData,setFormData] = useState(defaultFormData);\n    //when click on submit to update profile it is calling useCallback function\n    const handleSubmit = useCallback( async e => {\n        //parameter for useCallback function \n        //if firstname on form is blank then value false ortherwise it is true\n        defaultError.fnError = formData.fName === \"\" ? true : false;\n        //if email on form is blank than it is false otherwise it is true\n        defaultError.emailError = formData.email === \"\" ? true : false;\n        //putting setError in State\n        setError(defaultError);\n\n        //if getting error for firstname or email then it will never  advance to try/catch\n        if(defaultError.fnError === true ||  defaultError.emailError === true){\n            return false;\n        }\n        try{\n            //updating the username and email using standard or prebuilt mehtod by firebase package library\n            //if correct information entered on form then user can enter name and email \n            await updateProfile(user,{displayName:formData.fName,email:formData.email});\n            //alllows user to update email\n            await updateEmail(user,formData.email);\n            //if email is updated then success message generated\n            updateUsername(formData.fName) // Change username on the tetris firebase backend\n            alert(\"successfully updated your profile\");\n            //once profile info is updated then alert message \"successfully updated profile\"\n        }catch(e){\n            alert(e.message);\n        }\n        //It's dependecy variable for useCallback function in 'const handle submit'\n        },[formData,defaultError,user]);\n    return (\n        <>\n        {/* code from bootsnip UserProfile 2 */}\n            <div className=\"row\">\n                <SidebarNav/> \n            <div className=\"col-md-9\">\n\t\t    <div className=\"card\">\n\t\t        <div className=\"card-body\">\n\t\t            <div className=\"row\">\n\t\t                <div className=\"col-md-12\">\n\t\t                    <h4>Your Profile</h4>\n\t\t                    <hr/>\n\t\t                </div>\n\t\t            </div>\n\t\t            <div className=\"row\">\n\t\t                <div className=\"col-md-12\">\n                            <div className=\"form-group row\">\n                                <label className=\"col-4 col-form-label\">Display  Name*</label> \n                                <div className=\"col-8\">\n                                    <input  placeholder=\"First Name\" value={formData.fName} onChange={(e)=>{setFormData({...formData,fName:e.target.value})}} className=\"form-control here\"  type=\"text\"/>\n                                    {error.fnError && <p className=\"error\">Please fill first name</p>}\n                                </div>\n                              </div>\n\n                              <div className=\"form-group row\">\n                                <label className=\"col-4 col-form-label\">Email*</label> \n                                <div className=\"col-8\">\n                                    <input  placeholder=\"Email\" value={formData.email} onChange={(e)=>{setFormData({...formData,email:e.target.value})}} className=\"form-control\"  type=\"text\"/>\n                                    {error.emailError && <p className=\"error\">Please fill email</p>}\n                                </div>\n                              </div> \n                              <div className=\"form-group row\">\n                                <div className=\"offset-4 col-8\">\n                                  <button name=\"submit\" type=\"submit\" onClick={handleSubmit} className=\"btn btn-primary\">Update Profile</button>\n                                </div>\n                              </div>\n                         </div>\n                         </div>\n            </div>\n            </div>\n            </div>    \n            </div>\n        </>\n    )\n}\n\nexport default ProfilePage","import React,{useState,useCallback,useMemo} from 'react'\nimport SidebarNav from './SidebarNav'\nimport {  updatePassword } from 'firebase/auth'\nimport { useAuthState } from '../../firebase'\nconst ChangePassword = () => {\n    const { user } = useAuthState()\n    // set all errors by default as blank or false\n\n    let defaultError = {errorPass:false,errorcPass:false};\n    //state variable of error and function setError on UI\n    //show error message on browser\n    const[error,setError]= useState(defaultError);\n    // cpassword equals confirmed password\n    const[formData,setFormData]= useState({password:'',cpassword:''});\n    const handleSubmit = useCallback(async e => {\n\n        if(formData.password === \"\" || formData.cpassword === \"\"){\n            //if password and confirmend password are blank then show red\n            //error below form \"please fill requrired field\"\n            //\n            setError({...error,errorPass:true});\n            return false;\n            // if passwords don't match then alert is \"passwords should be the same\"\n        }else if(formData.password !== formData.cpassword){\n            //if both passwords are the same then response is true\n            //and then shows error message below the form that passwords are the same\n            defaultError.errorcPass = true;\n            // it's setup the state back again with the error message true\n            setError(defaultError);\n            return false;\n        }\n        //if all are correct then we are showing all error messages again false\n        setError(defaultError);\n        try {\n            // handling error if get error from firebase\n            await updatePassword(user,formData.password) // update password\n            // alert message that we get from firebase\n            alert(\"Successfully updated password\");\n          } catch (e) {\n            //   if we get error then alert message like \"weak password\"\n            alert(e.message)\n          }\n        }, [formData,defaultError,error,user])//object passing data into\n\n    return (\n        // bootsnip code from #2 User Profile\n        <div className=\"row\">\n            <SidebarNav/>\n            <div className=\"col-md-9\">\n\t\t    <div className=\"card\">\n\t\t        <div className=\"card-body\">\n\t\t            <div className=\"row\">\n\t\t                <div className=\"col-md-12\">\n\t\t                    <h4>Profile Password</h4>\n\t\t                    <hr/>\n\t\t                </div>\n\t\t            </div>\n\t\t            <div className=\"row\">\n\t\t                <div className=\"col-md-12\">\n                        {/* purpose of form is to change and update password */}\n                            <div className=\"form-group row\">\n                                <label className=\"col-4 col-form-label\">New Password</label> \n                                <div className=\"col-8\">\n                                    <input  placeholder=\"Password\" className=\"form-control here\" onChange={(e)=>{\n                                        // value of the variable for change password placed in password:e.target.value or useState\n                                        //storing the value in useState and using this password for change password and\n                                        //ths is referrred to password in useState\n\n                                        setFormData({...formData,password:e.target.value})\n                                    }}  type=\"password\"/>\n\n                                </div>\n                              </div>\n                              <div className=\"form-group row\">\n                                <label className=\"col-4 col-form-label\">Confirm Password</label> \n                                <div className=\"col-8\">\n                                    <input  placeholder=\"Confirm Password\" className=\"form-control\" onChange={(e)=>{\n                                        setFormData({...formData,cpassword:e.target.value})\n                                    }}  type=\"password\"/>\n\n                                </div>\n                              </div> \n\n                              <div className=\"form-group row\">\n                                <div className=\"offset-4 col-8\">\n                                    {/* if true then fill input value of \"Please fill required field\"*/}\n                                {error.errorPass && <p className='error'>Please fill required field</p>}   \n                                {/* if both are password and confirmed password not same then message below of \"Pasworrd should be same\" */}\n                              {error.errorcPass && <p className='error'>Password should be same</p>}\n                                  <button name=\"submit\" type=\"submit\" onClick={handleSubmit} className=\"btn btn-primary\">Update Password</button>\n                                </div>\n                              </div>\n                         </div>\n                         </div>\n            </div>\n            </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ChangePassword","import React from 'react';\nconst HighestScore = ({gameScoreList}) => {\n    return (\n        <div className=\"row\">\n        <div className=\"col-md-12\">\n            {/* class to setup layout for tetris board for the table layout */}\n            <ul className={\"tetrisLeaderBoard\"}>\n              {/* populated scores list dynamically from the state variable */}\n              {/* when we connect firebase api data we will just put api data in gameScoreList */}\n              {/* Table Layout */}\n              <li className=\"row headers\">\n                  {/* index number */}\n                    <span className=\"col-md-2\">No:</span>\n                    <span className=\"col-md-7\">Player Name </span>\n                    <span className=\"col-md-3\">Score</span>\n              </li>\n              {/* searching for highest score variable by index */}\n            { gameScoreList.map((score,index)=>\n              (\n                    <li key={index} className=\"row\">\n                        {/* increases by one each time thru loop */}\n                        <span className=\"col-md-2\">{index+1}</span>\n                        {/* player name */}\n                        <span className=\"col-md-7\">{score.name}</span>\n                        {/* score value */}\n                        <span className=\"col-md-3\">{score.score}</span>\n                    </li>\n              ))}\n            </ul>\n          </div>\n    </div>\n    )\n};\n\nexport default HighestScore;","import React from 'react'\n\nconst TotalScore = ({gameScoreList}) => {\n  return (\n      <div className=\"row\">\n      <div className=\"col-md-12\">\n          <ul className={\"tetrisLeaderBoard\"}>\n            {/* populated scores list dynamically from the state variable */}\n            {/* when we connect firebase api data we will just put api data in gameScoreList */}\n            <li className=\"row headers\">\n                  <span className=\"col-md-2\">No:</span>\n                  <span className=\"col-md-7\">Player Name </span>\n                  <span className=\"col-md-3\">Score</span>\n            </li>\n          { gameScoreList.map((score,index)=>\n            (\n                  <li key={index} className=\"row\">\n                      <span className=\"col-md-2\">{index+1}</span>\n                      <span className=\"col-md-7\">{score.name}</span>\n                      <span className=\"col-md-3\">{score.score}</span>\n                  </li>\n            ))}\n          </ul>\n        </div>\n  </div>\n  )\n};\n\n\nexport default TotalScore","import React from 'react'\n\nconst MyScore = ({gameScoreList}) => {\n    return (\n        <div className=\"row\">\n        <div className=\"col-md-12\">\n            {/* creating a Table using className Tetris */}\n            {/* Table below and represnts table in code of \"My highest games\" */}\n            <ul className={\"tetrisLeaderBoard\"}>\n              {/* populated scores list dynamically from the state variable */}\n              {/* when we connect firebase api data we will just put api data in gameScoreList */}\n              <li className=\"row headers\">\n                    <span className=\"col-md-2\">No:</span>\n                    <span className=\"col-md-7\"></span>\n                    <span className=\"col-md-3\">Score</span>\n              </li>\n              {/* loops thru scores by index retries index, date, score */}\n            { gameScoreList.map((score,index)=>\n              (\n                    <li key={index} className=\"row\">\n                        <span className=\"col-md-2\">{index+1}</span>\n                        <span className=\"col-md-7\"></span>\n                        <span className=\"col-md-3\">{score.score}</span>\n                    </li>\n              ))}\n            </ul>\n          </div>\n    </div>\n    )\n};\n\nexport default MyScore","import { getFirestore, collection, query, orderBy, limit, getDocs } from \"firebase/firestore\"\n// check who is logged in \nimport { getAuth, onAuthStateChanged } from \"firebase/auth\"\n// database object\nconst db = getFirestore()\n// checks what user is logged in \nconst auth = getAuth()\nlet userUID = ''\nonAuthStateChanged(auth, (user => {\n  // get userID\n   userUID = user ? user.uid : '' // Get user's UID\n}))\n\n// Leaderboard Total Score\nexport const GetTotalScores = async () => {\n  // total Ref equal object of firebase databse collection\n  const totalRef =collection(db, \"leaderboards/default/TotalPoints\")\n  // const q = get 10 records ordered by score from collection in descending order\n  const q = query(totalRef, orderBy('score', 'desc'), limit(10))\n  // formatting firebase document data into json format\n  const querySnapshot = await getDocs(q)\n  // results object and pushing querySnapshots into results so that we are able to use result in react\n  let results = []\n  querySnapshot.forEach((doc) => {\n    results.push(doc.data())\n  })\n  return results\n}\n\nexport const GetHighestScores = async () => {\n   // total highestRef equal object of firebase databse collection\n  const highestRef = collection(db, \"leaderboards/default/IndividualGamePoints\")\n  // const q = get 10 records ordered by score from collection in descending order\n  const q = query(highestRef, orderBy('score', 'desc'), limit(10))\n  // formatting firebase document data into json format\n  const querySnapshot = await getDocs(q)\n  // results object and pushing querySnapshots into results so that we are able to use result in react\n  // react array object in order to populate the result \n  let results = []\n  querySnapshot.forEach((doc) => {\n    results.push(doc.data())\n  })\n  return results\n}\n// function to GetMyScores  that retrieves  users by ID on the Leaderboard for \"My highest games\"\nexport const GetMyScores = async () => {\n  const myScoresRef = collection(db, `users/${userUID}/personalLeaderboard`)\n  // get latest 10 score list in desc order\n  const q = query(myScoresRef, orderBy('score', 'desc'), limit(10))\n  // getting value in firebase document format so it's converting in Json object or React array format\n  const querySnapshot = await getDocs(q)\n  // results object and pushing querySnapshots into results so that we are able to use result in react\n  // react array object in order to populate the result \n  let results = []\n  // pushing querySnapshot in results\n  querySnapshot.forEach((doc) => {\n    results.push(doc.data())\n  })\n  return results\n}","import React,{useEffect, useState} from 'react'\nimport SidebarNav from './SidebarNav'\nimport HighestScore from './GameScore/HighestScore'\nimport TotalScore from './GameScore/TotalScore'\nimport MyScore from './GameScore/MyScore'\nimport { GetHighestScores, GetMyScores, GetTotalScores } from './GameScore/GetFirebaseScores'\n\nconst LeaderBoard = () => {\n  //set up score manually for now in const default Score List\n  //refers to \"highest game score tab in the code\"\n//when we will integrate firebase Api we ill use setGameScoreList function to propagate API\n  const[ highestScoreList, setHighestScoreList ] = useState([]);\n  // refers to 'My highest games tab in the code\"\n  const[ myScoreList, setMyScoreList ] =useState([]);\n  //refers to \"Total score tab in the code\"\n  const[ totalScoreList, setTotalScoreList ] =  useState([]);\n  // change step for tab related to className={activeStep}\n  const[activeStep,setStep] = useState(0);\n  //we will connect firebase api here using useEffect and save api data response in setGameScoreList\n\n  useEffect(() => {\n    const RetrieveScores = async () => {\n      const TotalScores = await GetTotalScores()\n      setTotalScoreList(TotalScores)\n      const HighestScores = await GetHighestScores()\n      setHighestScoreList(HighestScores)\n      const MyScores = await GetMyScores()\n      setMyScoreList(MyScores)\n    }\n    RetrieveScores()    \n  }, [])\n\n    return (\n\n        <div className=\"row\">\n            <SidebarNav/>\n            <div className=\"col-md-9\">\n          <div className=\"row mb-1\">\n              <div className=\"col-md-12 text-center\">\n                  <h1>Leader Board</h1>\n                </div>\n          </div>    \n          <div className=\"row\">\n\t\t\t<div className=\"col-md-12\">\n\t\t\t\t<nav className=\"sidebarnav\">\n\t\t\t\t\t<div className=\"nav nav-tabs nav-fill\" id=\"nav-tab\" role=\"tablist\">\n\t\t\t\t\t\t<a className={activeStep === 0 ? \"nav-item nav-link active\": \"nav-item nav-link\" } onClick={(e)=>{e.preventDefault(); setStep(0);}} href=\"/\">Total Score</a>\n\t\t\t\t\t\t<a  className={activeStep === 1 ? \"nav-item nav-link active\": \"nav-item nav-link\" } onClick={(e)=>{e.preventDefault(); setStep(1);}} href=\"/\">Highest games</a>\n\t\t\t\t\t\t<a className={activeStep === 2 ? \"nav-item nav-link active\": \"nav-item nav-link\" } onClick={(e)=>{e.preventDefault(); setStep(2);}} href=\"/\">My highest games</a>\n\t\t\t\t\t</div>\n\t\t\t\t</nav>\n\t\t\t\t<div className=\"tab-content py-3 px-3 px-sm-0\" id=\"nav-tabContent\">\n\t\t\t\t\t<div className={activeStep === 0 ? \"tab-pane fade show active\" : \"tab-pane fade\"}>\n            <TotalScore gameScoreList={totalScoreList}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={activeStep === 1 ? \"tab-pane fade show active\" : \"tab-pane fade\"}>\n            <HighestScore gameScoreList={highestScoreList}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={activeStep === 2 ? \"tab-pane fade show active\" : \"tab-pane fade\"}>\n            <MyScore gameScoreList={myScoreList}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t</div>\n\n</div>\n</div>\n    )\n}\n\nexport default LeaderBoard","export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 18;\n\nexport const createStage = () => \n  Array.from(Array(STAGE_HEIGHT), () => \n    new Array(STAGE_WIDTH).fill([0, 'clear'])\n  )\n  // TODO: comment out - tutorial at 18m\n\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\n  for (let y = 0; y < player.tetromino.length; y += 1) {\n    for (let x = 0; x < player.tetromino[y].length; x += 1) {\n      // 1: Check that we're on an actual Tetromino cell\n      if (player.tetromino[y][x] !== 0) {\n        if (\n          // 2: Check that our move is inside the game areas height (y)\n          // We shouldn't go through the bottom of the play area\n          !stage[y + player.pos.y + moveY] || \n          // 3: Check that our move is inside the game areas width (x)\n          !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n          // 4: Check that the cell we're moving to isn't set to clear\n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !== 'clear'\n        ) {\n          return true\n        }\n      }\n    }\n  }\n}","import styled from 'styled-components'\n\nimport bgImage from '../img/bg.png'\n\n// May need to adjust height here to work well with nav bar\nexport const StyledTetrisWrapper = styled.div`\n  width: 100%;\n  height: 85vh;\n  overflow: hidden;\n`\n\nexport const StyledTetris = styled.div`\n  display: flex;\n  align-items: flex-start;\n  padding: 40px;\n  margin: 0 0;\n  max-width: 900px;\n\n  aside {\n    width: 100%;\n    max-width: 200px;\n    display: block;\n    padding: 0 20px;\n  }\n\n  asidelookahead {\n    width: 100%;\n    max-width: 180px;\n    display: block;\n    padding: 0 20px;\n  }\n`","export default __webpack_public_path__ + \"static/media/bg.d63cfd51.png\";","export const TETROMINOS = {\n  0: { shape: [[0]], color: '255, 255, 255' },\n  I: {\n    shape:  [\n              [0, 'I', 0, 0],\n              [0, 'I', 0, 0],\n              [0, 'I', 0, 0],\n              [0, 'I', 0, 0],\n            ],\n    color: '80, 227, 230',\n  },\n  J: {\n    shape:  [\n              [0, 'J', 0],\n              [0, 'J', 0],\n              ['J', 'J', 0],\n            ],\n    color: '36, 95, 223',\n  },\n  L: {\n    shape:  [\n              [0, 'L', 0],\n              [0, 'L', 0],\n              [0, 'L', 'L'],\n            ],\n    color: '223, 173, 36',\n  },\n  O: {\n    shape:  [\n              ['O', 'O'],\n              ['O', 'O'],\n            ],\n    color: '223, 217, 36',\n  },\n  S: {\n    shape:  [\n              [0, 'S', 'S'],\n              ['S', 'S', 0],\n              [0, 0, 0],\n            ],\n    color: '48, 211, 56',\n  },\n  T: {\n    shape:  [\n              [0, 0, 0],\n              ['T', 'T', 'T'],\n              [0, 'T', 0],\n            ],\n    color: '132, 61, 198',\n  },\n  Z: {\n    shape:  [\n              ['Z', 'Z', 0],\n              [0, 'Z', 'Z'],\n              [0, 0, 0],\n            ],\n    color: '227, 78, 78',\n  },\n}\n\n// Here we can modify what pieces are available/get thrown out onto the stage\n// export const randomTetromino = () => {\n//   const tetrominos = 'IJLOSTZ'\n//   const randTetromino = \n//     tetrominos[Math.floor(Math.random() * tetrominos.length)]\n//   return TETROMINOS[randTetromino]\n// }\n","import styled from 'styled-components'\n\nexport const Grid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 10px;\n  grid-auto-rows: auto;\n`;\n\nexport const StyledLookahead = styled.div`\n  display: grid;\n  grid-template-rows: repeat(\n    ${props => props.height},\n    min(25px)\n  );\n  grid-template-columns: repeat(${props => props.height}, min(25px));\n  grid-gap: 1px;\n  border: 2px solid #ddd;\n  width: 59%;\n  max-width: 25vw;\n  background: #f2f2f2;\n`","import { useState, useCallback, useEffect, useRef } from 'react'\n\nimport { checkCollision, STAGE_WIDTH } from '../files/gameHelpers'\nimport { TETROMINOS } from '../files/tetrominos'\n\nexport const usePlayer = () => {\n\n  const [ final, setFinal ] = useState('IJLOSTZ')\n  const [ count, setCount ] = useState(0)\n  const ref = useRef(final)\n  \n  const [ player, setPlayer ] = useState({\n    pos: { x: 0, y: 0 },\n    tetromino: TETROMINOS[0].shape,\n    collided: false,\n    queue: ref.current,\n  })\n  \n  // initializes and updates the queue of next blocks\n  useEffect(() => {\n    const tetrominos = 'IJLOSTZ'\n    const updateString = () => {\n      let randLetter = Math.floor(Math.random() * tetrominos.length)\n      setFinal(prev => (prev.substring(1))+tetrominos[randLetter])\n      ref.current = final\n    }\n    updateString()\n  }, [count])\n\n  const rotate = (matrix, dir) => {\n    // Make the rows into columns (transpose)\n    const rotatedTetro = matrix.map((_, index) => \n      matrix.map(col => col[index])\n    )\n    // Reverse each row to get a rotated matrix\n    if (dir > 0) return rotatedTetro.map(row => row.reverse())\n    return rotatedTetro.reverse()\n  }\n\n  const playerRotate = (stage, dir) => {\n    const clonedPlayer = JSON.parse(JSON.stringify(player))\n    clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir)\n\n    const pos = clonedPlayer.pos.x\n    let offset = 1\n    while(checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\n      clonedPlayer.pos.x += offset\n      offset = -(offset + (offset > 0 ? 1 : -1))\n      if (offset > clonedPlayer.tetromino[0].length) {\n        rotate(clonedPlayer.tetromino, -dir)\n        clonedPlayer.pos.x = pos\n        return\n      }\n    }\n\n    setPlayer(clonedPlayer)\n  }\n\n  const updatePlayerPos = ({ x, y, collided }) => {\n    setPlayer(prev => ({\n      ...prev,\n      pos: { x: (prev.pos.x += x), y: (prev.pos.y += y)},\n      collided,\n    }))\n  }\n\n  const resetPlayer = useCallback(() => {\n    setPlayer({\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\n      tetromino: TETROMINOS[ref.current[0]].shape,\n      collided: false,\n      queue: ref.current\n    })\n    nextTetromino();\n  }, [])\n \n  const nextTetromino = () => {  \n    setCount(prev => prev+1)\n  }\n\n  return [player, updatePlayerPos, resetPlayer, playerRotate ]\n}","import { useState, useEffect } from 'react'\nimport { createStage } from '../files/gameHelpers'\n\nexport const useStage = (player, resetPlayer) => {\n  const [ stage, setStage ] = useState(createStage())\n  const [ rowsCleared, setRowsCleared ] = useState(0)\n\n  useEffect(() => {\n    setRowsCleared(0)\n\n    const sweepRows = newStage => \n      newStage.reduce((ack, row) => {\n        if (row.findIndex(cell => cell[0] === 0) === -1) {\n          setRowsCleared(prev => prev + 1)\n          ack.unshift(new Array(newStage[0].length).fill([0, 'clear']))\n          return ack\n        }\n        ack.push(row)\n        return ack\n      }, [])\n\n    const updateStage = prevStage => {\n      // First flush the stage\n      // Take the previous stage and map through each row\n      const newStage = prevStage.map(row => \n        // Take the row and map through every cell\n        row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell)), // For every cell check if it is clear or filled, in which case write the new stage's cell in that row as clear or filled\n      )\n\n      // Then draw the tetromino\n      // For each row\n      player.tetromino.forEach((row, y) => {\n        // For each cell\n        row.forEach((value, x) => {\n          // If the value of that cell is not 0\n          if (value !== 0) {\n            // Update the position of that cell on the next stage\n            newStage[y + player.pos.y][x + player.pos.x] = [ // newStage at position x by y =\n              value, // value of the tetromino\n              `${player.collided ? 'merged' : 'clear'}`, // if it is cleared or merged\n            ]\n          }\n        })\n      })\n      // Then check if we collided\n      if (player.collided) {\n        resetPlayer()\n        return sweepRows(newStage)\n      }\n      return newStage\n    }\n\n    setStage(prev => updateStage(prev))\n  }, [player, resetPlayer])\n\n  return [stage, setStage, rowsCleared]\n}","import styled from 'styled-components'\n\nexport const StyledStage = styled.div`\n  display: grid;\n  grid-template-rows: repeat(\n    ${props => props.height},\n    calc(20vw / ${props => props.width})\n  );\n  grid-template-columns: repeat(${props => props.width}, 1fr);\n  grid-gap: 1px;\n  border: 2px solid #ddd;\n  width: 100%;\n  max-width: 20vw;\n  background: #f2f2f2;\n  height: 100%;\n  max-height: 100%;\n  overflow: visible;\n`","import styled from 'styled-components'\n\nexport const StyledCell = styled.div`\n  width: auto;\n  background: rgba(${props => props.color}, 0.8);\n  border: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\n  border-bottom-color: rgba(${props => props.color}, 0.1);\n  border-right-color: rgba(${props => props.color}, 1);\n  border-top-color: rgba(${props => props.color}, 1);\n  border-left-color: rgba(${props => props.color}, 0.3);\n`","import React from 'react'\nimport { StyledCell } from './styles/StyledCell'\nimport { TETROMINOS } from './files/tetrominos'\n\nconst Cell = ({ type }) => (\n  <StyledCell type={type} color={TETROMINOS[type].color} />\n)\n\nexport default React.memo(Cell)","import React from 'react'\nimport { StyledStage } from './styles/StyledStage'\n\nimport Cell from './Cell'\n\nconst Stage = ({ stage }) => (\n  <StyledStage width={stage[0].length} height={stage.length}>\n    {stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}  \n  </StyledStage>\n)\n\nexport default Stage","import styled from 'styled-components'\n\nexport const StyledDisplay = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  margin: 0 0 20px 0;\n  padding: 20px;\n  border: 4px solid #ddd;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  color: ${props => (props.gameOver ? 'red' : '#737373')};\n  background: #f2f2f2;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 0.8rem;\n`","import React from 'react'\nimport { StyledDisplay } from './styles/StyledDisplay'\n\nconst Display = ({ gameOver, text }) => (\n  <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\n)\n\nexport default Display","import styled from 'styled-components'\n\nexport const StyledStartButton = styled.button`\n  box-sizing: border-box;\n  margin: 0 0 20px 0;\n  padding: 20px;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  border: none;\n  color: black;\n  background #e5e5e5;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 1rem;\n  outline: none;\n  cursor: pointer;\n`","import React from 'react'\nimport { StyledStartButton } from './styles/StyledStartButton'\n\nconst StartButton = ({ callback }) => (\n  <StyledStartButton onClick={callback}>Start Game</StyledStartButton>\n)\n\nexport default StartButton","import React from 'react'\nimport { StyledLookahead } from './styles/StyledLookahead'\n\n\nimport Cell from './Cell'\n\nconst Lookahead = ({ tetrominos }) => (\n  <StyledLookahead width={tetrominos[0].length} height={tetrominos.length}>\n    {tetrominos.map(row => row.map((cell, x) => <Cell key={x} type={cell} /> ))}   \n  </StyledLookahead>\n)\n\nexport default Lookahead\n","import React, { useEffect, useState } from 'react'\nimport { Redirect } from 'react-router'\n\nimport { createStage, checkCollision } from './files/gameHelpers'\nimport { UpdatePoints, UpdateLeaderBoards } from './files/fireBaseIntegration'\nimport { GetUpgrades } from '../Pages/UpgradeFiles/UpgradesFirebase'\n\n// Styled Components\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris'\nimport { TETROMINOS } from './files/tetrominos'\nimport { Grid } from './styles/StyledLookahead'\n\n// Custom Hooks\nimport { useInterval } from './hooks/useInterval'\nimport { usePlayer } from './hooks/usePlayer'\nimport { useStage } from './hooks/useStage'\nimport { useGameStatus } from './hooks/useGameStatus'\n\n// Components\nimport Stage from './Stage'\nimport Display from './Display'\nimport StartButton from './StartButton'\nimport { useAuthState } from '../../firebase'\nimport Lookahead from './Lookahead'\n\nconst Tetris = () => {\n  const [ dropTime, setDropTime ] = useState(null)\n  const [ varDropSpeed, setVarDropSpeed ] = useState(200)\n  const [ gameOver, setGameOver ] = useState(false)\n  const [ totalPoints, setTotalPoints ] = useState(null)\n  const [ look, setLook ] = useState([])\n\n  const [ player, updatePlayerPos, resetPlayer, playerRotate ] = usePlayer()\n  const [ stage, setStage, rowsCleared ] = useStage(player, resetPlayer)\n  const [ oldPoints, setOldPoints, score, setScore, rows, setRows, level, setLevel ] = useGameStatus(rowsCleared)\n  \n  const movePlayer = dir => {\n    if (!checkCollision(player, stage, { x: (dir), y: 0})) {\n      updatePlayerPos({ x: dir, y: 0 })\n    }\n  }\n\n  const startGame = () => {\n    /* if(user?.displayName === null){\n      alert(\"You need to setup your profile name first!\");\n      return false;\n    }*/\n    // Reset everything\n    setStage(createStage())\n    resetPlayer()\n    setGameOver(false)\n    // setDropTime(100)\n    setDropTime(varDropSpeed)\n    setScore(0)\n    setRows(0)\n    setLevel(0)\n  }\n\n  const endGame = () => {\n    // console.log('GAME OVER!!!!')\n    setGameOver(true)\n    setDropTime(null)\n    // console.log('END GAME: UPDATING SCORE ON FIREBASE')\n    // console.log('OLD POINTS: ', oldPoints, 'SCORE: ', score, 'TOTAL: ', totalPoints)\n    UpdatePoints(totalPoints)\n    UpdateLeaderBoards(totalPoints, score);\n  }\n\n  const drop = () => {\n    // Increase level when player has cleared 10 rows\n    if (rows > (level + 1) * 10) {\n      setLevel(prev => prev + 1)\n      // Also increase speed\n      setDropTime(varDropSpeed + ((level + 1) * 50))\n      setDropTime(100)\n    }\n\n    if (!checkCollision(player, stage, { x: 0, y: 1 })) {\n      updatePlayerPos({ x: 0, y: 1, collided: false })\n    } else {\n      // Game over\n      if (player.pos.y < 1) {\n        endGame()\n      }\n      updatePlayerPos({ x: 0, y: 0, collided: true })\n    }\n  }\n\n  const keyUp = ({ keyCode }) => {\n    if (!gameOver) {\n      if (keyCode === 40) {\n        setDropTime(varDropSpeed + ((level + 1) * 50))\n        // setDropTime(100)\n      }\n    }\n  }\n\n  const dropPlayer = () => {\n    setDropTime(null)\n    drop()\n  }\n\n  const move = ({ keyCode }) => {\n    if (!gameOver) {\n      if (keyCode === 37) {\n        movePlayer(-1) \n      } else if (keyCode === 39) {\n        movePlayer(1)\n      } else if (keyCode === 40) {\n        dropPlayer()\n      } else if (keyCode === 38) {\n        playerRotate(stage, 1)\n      }\n    }\n\n  }\n\n  useInterval(() => {\n    drop();\n  }, dropTime)\n\n  // Updates Points\n  useEffect(() => {\n    const updateTotalPoints = () => {\n      setTotalPoints(oldPoints + score)\n    }\n    updateTotalPoints()\n  }, [oldPoints, score])\n\n  \n\n  // Get the upgrades\n  useEffect(() => {\n    const retrieveUpgrades = async () => { // must be async to work properly\n      let lookConst = [];\n      const upgradeHolder = await GetUpgrades()\n\n      // for loop builds array used in rendering lookahead components\n      // tiedl to the lookAhead portion of GetUpgrades() above\n      for (let x = 1; x < upgradeHolder.lookAhead+1; x++) {\n        lookConst.push(x)\n      }\n      setLook(lookConst)\n\n      // Get dropSpeed level and multiply by 100 then add to 1000 for final dropTime\n      const dropSpeed = (upgradeHolder.dropSpeed * 100) + 500\n      setVarDropSpeed(dropSpeed)\n    }\n    retrieveUpgrades()\n  }, [])\n\n  // const UpgradesRedirect = () => {\n  //   props.history.push(\"/upgrades\");\n  // }\n\n  return (\n    <StyledTetrisWrapper\n        role=\"button\" \n        tabIndex=\"0\" \n        onKeyDown={e => move(e)} \n        onKeyUp={keyUp}>\n      <StyledTetris>\n        <Stage stage={stage} />\n        <aside>\n          { gameOver ? (\n            // We may want to keep score/rows/level displayed even after game over. This code hides them.\n            <>\n            <Display gameOver={gameOver} text=\"Game Over\" />\n            <Redirect to=\"/upgrade\" />\n            </>\n          ) : (\n            <div>\n              <div>\n              <Display text={`Total: ${totalPoints}`} />\n              <Display text={`Score: ${score}`} />\n              <Display text={`Rows: ${rows}`} />\n              </div>\n            </div>\n          )}\n          <StartButton callback={startGame} />\n        </aside>\n        <>\n          { gameOver ? (\n            <div></div>\n          ) : ( // Renders the lookAhead Components using the state array look\n              <Grid>\n              <label style={{ color: '#737373', fontFamily: 'Pixel', fontSize: '0.8rem'}} color=\"white\">Next Pieces</label>\n              {look.map((data,id)=>{\n                return <Lookahead tetrominos={TETROMINOS[player.queue[data]].shape} key={id} />\n              })}\n              </Grid>\n          )}\n        </>\n      </StyledTetris>\n    </StyledTetrisWrapper>\n  )\n}\n\nexport default Tetris\n","import { useState, useEffect, useCallback } from 'react'\nimport { GetPoints } from '../files/fireBaseIntegration'\n\nexport const useGameStatus = rowsCleared => {\n  const [ oldPoints, setOldPoints ] = useState(null)\n  const [ score, setScore ] = useState(0)\n  const [ rows, setRows ] = useState(0)\n  const [ level, setLevel ] = useState(0)\n\n  const linePoints = [40, 100, 300, 1200]\n\n  useEffect(() => {\n    \n    const retrievePoints = async () => {\n      const points = await GetPoints()\n      // console.log('GETTING POINTS:', points)\n      setOldPoints(points)\n      // console.log('USEGAMESTATUS RETRIEVED POINTS: ', oldPoints)\n    }\n    retrievePoints()\n  }, [])\n\n  const calcScore = useCallback(() => {\n    // We have score\n    if (rowsCleared > 0) {\n      // This is how original Tetris score is calculated\n      setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1))\n      setRows(prev => prev + rowsCleared)\n    }\n  }, [level, linePoints, rowsCleared])\n\n  useEffect(() => {\n    calcScore()\n  }, [calcScore, rowsCleared, score])\n\n  return [oldPoints, setOldPoints, score, setScore, rows, setRows, level, setLevel]\n}","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react'\nimport SidebarNav from './SidebarNav'\nimport { Icon } from 'semantic-ui-react'\nimport { Link, useHistory} from 'react-router-dom'\nconst Forum = () => {\n    const history = useHistory();\n    const handleClick = (id,type)=>{\n        history.push(\"/forum/\"+id+\"/\"+type);\n    }\n    const handleDelete = (id)=>{\n        alert(\"Forum Deleted Succesfully\");\n    }\n    return (\n        <div className=\"row\">\n            <SidebarNav/>\n            <div className=\"col-md-9\">\n        <div className=\"row\">\n            <div className=\"col-md-7\"><h3>Forum</h3></div>\n            <div className=\"col-md-5 text-right\"><Link to=\"/forum/add\" className=\"btn btn-primary\">Add New</Link></div>\n        </div>\n        <div className=\"clearfix mb30\"></div>\n    <table className=\"table table-striped\">\n        <thead>\n          <tr>\n            <th>Topic</th>\n            <th>Comment</th>\n            <th>Posted Date</th>\n            </tr>\n          </thead>\n          <tbody>\n           <tr>\n            <td>Washington DC<br/><b>Posted By : Debra Shelby</b><br/><Icon name=\"comments\"/> This is great topic...</td>\n            <td align=\"center\">1</td>\n            <td>July 7 - 9, 2021<br/><br/>\n            <span className=\"controls\">\n                <Icon name=\"edit\" onClick={()=>{handleClick(1,'edit')}} className=\"edit\"/>\n                <Icon name=\"trash\"onClick={()=>{handleDelete(1)}}  className=\"trash\"/>\n                <Icon name=\"eye\" className=\"view\"/>\n            </span>\n            </td>\n          </tr>\n          <tr className=\"active\">    \n            <td>NSTP Annual Federal Tax Refresher Course<br/><b>Posted By : John</b><br/><Icon name=\"comments\"/> This is very helpfull topic...</td>\n            <td align=\"center\">12</td>\n            <td>July 10, 2015<br/><br/>\n            <span className=\"controls\">\n                <Icon name=\"edit\" onClick={()=>{handleClick(12,'edit')}}  className=\"edit\"/>\n                <Icon name=\"trash\" onClick={()=>{handleDelete(1)}} className=\"trash\"/>\n                <Icon name=\"eye\" className=\"view\"/>\n            </span>\n            </td>\n          </tr>           \n          <tr>\n            <td>Washington DC<br/><b>Posted By : Debra Shelby</b><br/><Icon name=\"comments\"/> This is great topic...</td>\n            <td align=\"center\">1</td>\n            <td>July 7 - 9, 2021<br/><br/>\n            <span className=\"controls\">\n                <Icon name=\"edit\" onClick={()=>{handleClick(13,'edit')}}  className=\"edit\"/>\n                <Icon name=\"trash\" onClick={()=>{handleDelete(1)}} className=\"trash\"/>\n                <Icon name=\"eye\" className=\"view\"/>\n            </span>\n            </td>\n          </tr>\n          <tr className=\"active\">    \n            <td>NSTP Annual Federal Tax Refresher Course<br/><b>Posted By : John</b><br/><Icon name=\"comments\"/> This is very helpfull topic...</td>\n            <td align=\"center\">12</td>\n            <td>July 10, 2015<br/><br/>\n            <span className=\"controls\">\n                <Icon name=\"edit\"  onClick={()=>{handleClick(14,'edit')}} className=\"edit\"/>\n                <Icon name=\"trash\" onClick={()=>{handleDelete(1)}} className=\"trash\"/>\n                <Icon name=\"eye\" className=\"view\"/>\n            </span>\n            </td>\n          </tr>  \n          <tr>\n            <td>Washington DC<br/><b>Posted By : Debra Shelby</b><br/><Icon name=\"comments\"/> This is great topic...</td>\n            <td align=\"center\">1</td>\n            <td>July 7 - 9, 2021<br/><br/>\n            <span className=\"controls\">\n                <Icon name=\"edit\" onClick={()=>{handleClick(15,'edit')}}  className=\"edit\"/>\n                <Icon name=\"trash\" onClick={()=>{handleDelete(1)}} className=\"trash\"/>\n                <Icon name=\"eye\" className=\"view\"/>\n            </span>\n            </td>\n          </tr>\n          <tr className=\"active\">    \n            <td>NSTP Annual Federal Tax Refresher Course<br/><b>Posted By : John</b><br/><Icon name=\"comments\"/> This is very helpfull topic...</td>\n            <td align=\"center\">12</td>\n            <td>July 10, 2015<br/><br/>\n            <span className=\"controls\">\n                <Icon name=\"edit\"   onClick={()=>{handleClick(16,'edit')}}className=\"edit\"/>\n                <Icon name=\"trash\" onClick={()=>{handleDelete(1)}} className=\"trash\"/>\n                <Icon name=\"eye\" className=\"view\"/>\n            </span>\n            </td>\n          </tr>  \n        \n        </tbody>\n      </table>\n     </div>\n        </div>\n    )\n}\n\nexport default Forum\n","import React,{useState} from 'react'\nimport SidebarNav from './SidebarNav'\n\nconst AddForum = () => {\n    const[formData,setFormData] = useState({title:'',description:''});\n    const handleSubmit = ()=>{\n\n    }\n    return (\n        <div className=\"row\">\n            <SidebarNav />\n            <div className=\"col-md-9\">\n\t\t    <div className=\"card\">\n\t\t        <div className=\"card-body\">\n\t\t            <div className=\"row\">\n\t\t                <div className=\"col-md-12\">\n\t\t                    <h4>Add New Forum</h4>\n\t\t                    <hr/>\n\t\t                </div>\n\t\t            </div>\n\t\t            <div className=\"row\">\n\t\t                <div className=\"col-md-12\">\n                                <div className=\"form-group row\">\n                                <label className=\"col-4 col-form-label\">Title</label> \n                                <div className=\"col-8\">\n                                    <input  placeholder=\"Title\" className=\"form-control here\" type=\"text\" \n                                    onChange={(e)=>{setFormData({...formData,title:e.target.value})}}\n                                    value={formData.title}/>\n                                </div>\n                            </div>\n                            <div className=\"form-group row\">\n                                <label className=\"col-4 col-form-label\">Description</label> \n                                <div className=\"col-8\">\n                                    <textarea  onChange={(e)=>{setFormData({...formData,description:e.target.value})}} placeholder=\"Description\" className=\"form-control\" >{formData.description}</textarea>\n                                </div>\n                            </div> \n\n                            <div className=\"form-group row\">\n                                <div className=\"offset-4 col-8\">\n                                <button name=\"submit\" type=\"submit\" onClick={handleSubmit} className=\"btn btn-primary\">Submit</button>\n                                </div>\n                            </div>\n                        </div>\n                        </div>\n            </div>\n            </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AddForum\n","import React,{useState} from 'react'\nimport SidebarNav from './SidebarNav'\n\nconst EditForum = () => {\n    const[formData,setFormData] = useState({title:'',description:''});\n    const handleSubmit = ()=>{\n\n    }\n    return (\n        <div className=\"row\">\n            <SidebarNav />\n            <div className=\"col-md-9\">\n\t\t    <div className=\"card\">\n\t\t        <div className=\"card-body\">\n\t\t            <div className=\"row\">\n\t\t                <div className=\"col-md-12\">\n\t\t                    <h4>Edit Forum</h4>\n\t\t                    <hr/>\n\t\t                </div>\n\t\t            </div>\n\t\t            <div className=\"row\">\n\t\t                <div className=\"col-md-12\">\n                                <div className=\"form-group row\">\n                                <label className=\"col-4 col-form-label\">Title</label> \n                                <div className=\"col-8\">\n                                    <input  placeholder=\"Title\" className=\"form-control here\" type=\"text\" \n                                    onChange={(e)=>{setFormData({...formData,title:e.target.value})}}\n                                    value={formData.title}/>\n                                </div>\n                            </div>\n                            <div className=\"form-group row\">\n                                <label className=\"col-4 col-form-label\">Description</label> \n                                <div className=\"col-8\">\n                                    <textarea  onChange={(e)=>{setFormData({...formData,description:e.target.value})}} placeholder=\"Description\" className=\"form-control\" >{formData.description}</textarea>\n                                </div>\n                            </div> \n\n                            <div className=\"form-group row\">\n                                <div className=\"offset-4 col-8\">\n                                <button name=\"submit\" type=\"submit\" onClick={handleSubmit} className=\"btn btn-primary\">Submit</button>\n                                </div>\n                            </div>\n                        </div>\n                        </div>\n            </div>\n            </div>\n            </div>\n        </div>\n    )\n}\n\nexport default EditForum\n","import {\n  BrowserRouter as Router,\n  Route,\n  Redirect\n} from 'react-router-dom'\nimport { Home } from './components/Pages/Home'\nimport { UpgradeCards } from './components/Pages/Upgrade'\nimport { SignUp } from './components/authentication/SignUp'\nimport { Login } from './components/authentication/Login'\nimport  Navbar  from './components/navbar/Navbar'\nimport { AuthContextProvider, useAuthState } from './firebase' // set in ./firebase.js file\nimport ProfilePage from './components/Pages/Profile'\nimport ChangePassword from './components/Pages/ChangePassword'\nimport LeaderBoard from './components/Pages/LeaderBoard'\n\nimport Tetris from './components/tetris/Tetris'\nimport Forum from './components/Pages/Forum'\nimport AddForum from './components/Pages/AddForum'\nimport EditForum from './components/Pages/EditForum'\n// import TetrisDemo from './components/tetrisDemo/Tetris'\n\n\n\n// C is a placeholder for passed component from route tree. \nconst AuthenticatedRoute = ({ component: C, ...props }) => {\n  const { isAuthenticated } = useAuthState() // isAuthenticated returns Boolean, pulled from useAuthState().isAuthenticated\n  console.log(`AuthenticatedRoute: ${isAuthenticated}`)\n  return (\n    <Route\n      {...props}\n      render={routeProps =>\n        // If user is authenticated send user to component, if not send to login\n        isAuthenticated ? <C {...routeProps} /> : <Redirect to=\"/login\" /> \n      }\n    />\n  )\n}\n\n// See comments for AuthenticatedRoute\nconst UnauthenticatedRoute = ({ component: C, ...props }) => {\n  const { isAuthenticated } = useAuthState()\n  console.log(`UnauthenticatedRoute: ${isAuthenticated}`)\n  return (\n    <Route\n      {...props}\n      render={routeProps =>\n        // If user is NOT authenticated then load requested component, otherwise redirect user to home\n        !isAuthenticated ? <C {...routeProps} /> : <Redirect to=\"/\" />\n      }\n    />\n  )\n}\n\nconst redirect = (props) => {\n  props.history.push(\"/upgrade\"); \n}\n\nconst App = () => {\n  return (\n    <AuthContextProvider>\n      <Router>\n          <div className=\"container\">\n          <Navbar/>\n          <AuthenticatedRoute exact path=\"/\" component={Home} />\n          <AuthenticatedRoute exact path=\"/tetris\" component={Tetris} redirect={redirect}/>\n          <AuthenticatedRoute exact path=\"/forum/add\" component={AddForum} />\n          <AuthenticatedRoute exact path=\"/forum/:id/edit\" component={EditForum} />\n          <AuthenticatedRoute exact path=\"/forum\" component={Forum} />\n          <AuthenticatedRoute exact path=\"/profile\" component={ProfilePage} />\n          <AuthenticatedRoute exact path=\"/upgrade\" component={UpgradeCards} />\n          <AuthenticatedRoute exact path=\"/leaderboard\" component={LeaderBoard} />\n          <AuthenticatedRoute exact path=\"/change-password\" component={ChangePassword}/>\n          <Route exact path=\"/signup\" render={(props) => <SignUp {...props} />} />\n\n          \n          <UnauthenticatedRoute exact path=\"/login\" component={Login} />\n          </div>\n      </Router>\n    </AuthContextProvider>\n  )\n}\n\nexport default App\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport 'semantic-ui-css/semantic.min.css'\nimport './index.css';\n\nReactDOM.render(\n  // StrictMode activates additional checks and warnings for it's decendants\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}